name: Validate JSON

on:
  push:
    paths:
      - 'resources.json'
  pull_request:
    paths:
      - 'resources.json'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate JSON structure
        run: |
          cat > validate.js <<'EOF'
          const fs = require('fs');

          // Read resources.json
          const data = JSON.parse(fs.readFileSync('resources.json', 'utf8'));

          // Check required top-level keys
          const requiredKeys = ['repositories', 'papers', 'websites', 'courses', 
                              'books', 'datasets', 'presentations', 'metadata'];
          requiredKeys.forEach(key => {
            if (!data[key]) throw new Error(`Missing required key: ${key}`);
          });

          // Validate metadata
          if (!data.metadata.lastUpdated) throw new Error('Missing metadata.lastUpdated');
          if (!data.metadata.counts) throw new Error('Missing metadata.counts');

          // Validate counts
          const categories = ['repositories', 'papers', 'websites', 'courses', 
                            'books', 'datasets', 'presentations'];
          categories.forEach(category => {
            const actualCount = data[category].length;
            const storedCount = data.metadata.counts[category];
            if (actualCount !== storedCount) {
              throw new Error(`Count mismatch for ${category}: stored=${storedCount}, actual=${actualCount}`);
            }
          });

          // Validate entries
          categories.forEach(category => {
            data[category].forEach((item, index) => {
              if (!item.title) throw new Error(`Missing title in ${category}[${index}]`);
              if (!item.url) throw new Error(`Missing url in ${category}[${index}]`);
              if (!item.tags || !Array.isArray(item.tags)) {
                throw new Error(`Invalid tags in ${category}[${index}]`);
              }
              if (!item.dateAdded) throw new Error(`Missing dateAdded in ${category}[${index}]`);
            });
          });

          console.log('âœ… JSON validation successful!');
          EOF

          node validate.js